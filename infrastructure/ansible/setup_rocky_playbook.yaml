---
- name: Perform the initial setup of the Rocky webserver(s)
  hosts: rocky
  vars:
    bastion_host_ipaddr: >-
      {{ lookup('community.general.dig', 'bastion.roadtosysadmin.net.') }}

  tasks:
    - name: Guard against direct playbook invocation on "null" inventory
      when: ansible_host_ipaddr is defined
      block:
        - name: Verify that the host was deployed via TF
          ansible.builtin.assert:
            that: "ansible_host_ipaddr != '169.254.254.169'"
            fail_msg: "has build_inventory_playbook.yaml been invoked already?"
            quiet: true
          register: host_is_deployed
          ignore_errors: true

        - name: The host is not deployed, will not attempt to set it up
          ansible.builtin.meta: end_host
          when: host_is_deployed.failed

    - name: Set firewalld to allow SSH from <bastion> & HTTP/HTTPS from <any>
      block:
        - name: Overwrite firewalld's Public zone definition file
          ansible.builtin.template:
            src: ./templates/public.xml.j2
            dest: /etc/firewalld/zones/public.xml
            backup: true
            validate: /usr/bin/xmllint --noout %s

        - name: Confirm the validity of the new permanent configuration
          ansible.builtin.command:
            cmd: /usr/bin/firewall-cmd --check-config

        - name: Reload firewalld to enable new zone definition in runtime
          ansible.builtin.systemd_service:
            name: firewalld.service
            state: reloaded

    - name: Upgrade installed packages and deploy Nginx
      block:
        - name: Update the packages list
          ansible.builtin.dnf:
            state: present
            update_cache: true

        - name: Upgrade the installed packages
          ansible.builtin.dnf:
            pkg: '*'
            state: latest
            update_only: true

        - name: Install Nginx
          ansible.builtin.dnf:
            pkg: nginx
            state: present

        - name: Ensure Nginx is not running yet
          ansible.builtin.systemd_service:
            name: nginx.service
            state: stopped

    - name: Set up the webserver and serve the website
      block:
        - name: Overwrite the default Nginx configuration
          ansible.builtin.copy:
            src: ./files/nginx.conf
            dest: /etc/nginx/nginx.conf
            backup: true
            validate: /usr/sbin/nginx -t -c %s

        - name: Create the webroot referenced by the conf
          ansible.builtin.file:
            path: /srv/www/html/rtsa_current
            state: directory
            group: www
            owner: www
            serole: object_r
            setype: httpd_sys_content_t
            seuser: system_u
            recurse: true

        - name: Archive and compress website files
          local_action:
            module: ansible.builtin.command
            chdir: "{{ playbook_dir }}/../../website/live/rtsa_current/"
            argv:
              - /usr/bin/tar
              - -czf
              - "{{ playbook_dir }}/files/rtsa_webroot_files.tar.gz"
              - .

        - name: Copy over and unpack the archive
          ansible.builtin.unarchive:
            src: "{{ playbook_dir }}/files/rtsa_webroot_files.tar.gz"
            dest: /srv/www/html/rtsa_current/
            group: www
            owner: www
            seuser: system_u

        - name: Start and enable the Nginx systemd unit
          ansible.builtin.systemd_service:
            name: nginx.service
            state: started
            enabled: true

              #    - name: Configure sshd explicitly
              #      block:
              #        - name: Copy sshd_config over to the host and validate its syntax
              #          ansible.builtin.copy:
              #            src: files/sshd_config
              #            dest: /etc/ssh/sshd_config
              #            backup: true
              #            validate: /usr/sbin/sshd -t -f %s
              #
              #        - name: Enable the new configuration
              #          ansible.builtin.service:
              #            name: sshd
              #            state: reloaded
...
